# 预配置文件(Debian 11 bullseye)

########
# 本地化
########
# 设置语言，国家和地区。（注意：源、主机名和域名需要修改，中文为 zh_CN）
d-i debian-installer/locale string en_US
#d-i debian-installer/language string en_US
#d-i debian-installer/country string US
#d-i debian-installer/locale string en_US.UTF-8
# 键盘选择。
d-i keyboard-configuration/xkb-keymap select us

##########
# 网络配置
##########
# 自动选择一个具有链接的接口。
#d-i netcfg/choose_interface select auto
# 要选择特定的接口，请执行以下操作：
d-i netcfg/choose_interface select eth0
# 从 dhcp 分配的任何主机名和域名都优先于此处设置的值。但是设置值会阻止显示问题。（需要修改域名主机名）
d-i netcfg/get_hostname string Amazon
d-i netcfg/get_domain string unisonteam.com
# 强制使用主机名，无论 DHCP 服务器返回什么。（需要修改主机名）
d-i netcfg/hostname string Amazon
# 禁用烦人的WEP密钥对话框。
d-i netcfg/wireless_wep string
# 一些 ISP 用作密码的古怪 dhcp 主机名。（需要修改主机名）
d-i netcfg/dhcp_hostname string Amazon
# 如果网络或其他硬件需要非免费固件，您可以将安装程序配置为始终尝试加载它，而不提示。 或更改为 false 以禁用询问。
#d-i hw-detect/load_firmware boolean true
# 如果您希望使用网络控制台组件通过 SSH 进行远程安装，请使用以下设置。 这仅在您打算手动执行安装的其余部分时才有意义。
#d-i anna/choose_modules string network-console
#d-i network-console/authorized_keys_url string http://10.0.0.1/openssh-key
#d-i network-console/password password r00tme
#d-i network-console/password-again password r00tme

################################
# 镜像设置（根据VPS位置修改镜像网址）
################################
d-i mirror/country string manual
d-i mirror/http/hostname string deb.debian.org
d-i mirror/http/directory string /debian
d-i mirror/http/proxy string

##########
# 帐户设置
##########
# 跳过创建 root 帐户（普通用户帐户将能够使用 sudo）。
#d-i passwd/root-login boolean false
# 跳过创建普通用户帐户的操作。
d-i passwd/make-user boolean false
# Root 密码 (明文)
#d-i passwd/root-password password 密码
#d-i passwd/root-password-again password 密码
# Root 密码 (apt install whois && mkpasswd --method=sha-512 密码)
d-i passwd/root-password-crypted password $6$KC2vbKEixeRBG4PC$nVdYPvnfboRdUcvpb6g4xnZG42mXRE8.prfl1q4Brjn/D0Tix/G7A1JCS3sMTdVHM8utnVQrOdtEnpnKEFQsJ/
# 创建普通用户
#d-i passwd/user-fullname string ShenJunfeng
#d-i passwd/username string sjf
# 用户密码 (明文)
#d-i passwd/user-password password 密码
#d-i passwd/user-password-again password 密码
# 用户密码 (apt install whois && mkpasswd --method=sha-512 密码)
#d-i passwd/user-password-crypted password [crypt(3) hash]
# 使用指定的 UID 而不是默认值创建第一个用户。
#d-i passwd/user-uid string 1010
# 用户帐户将被添加到一些标准的初始组中。 要覆盖它，请使用它。
#d-i passwd/user-default-groups string audio cdrom video

###############
# 时钟和时区设置
###############
# 控制是否将硬件时钟设置为UTC。
d-i clock-setup/utc boolean true
# 时区内容参见 /usr/share/zoneinfo/ 的内容。
d-i time/zone string Asia/Shanghai
# 控制在安装过程中是否使用 NTP 设置时钟
d-i clock-setup/ntp boolean true
# NTP 服务器
#d-i clock-setup/ntp-server string ntp.example.com

############################
# 自动分区（原 Amazon 分区设置）
############################
#d-i partman-auto/method string regular
#d-i partman-lvm/device_remove_lvm boolean true
#d-i partman-md/device_remove_md boolean true
#d-i partman-lvm/confirm boolean true
#d-i partman-lvm/confirm_nooverwrite boolean true
# atomic:所有文件都在一个分区中  home:单独的 /home 分区  multi:单独的 /home，/var 和 /tmp 分区
#d-i partman-auto/choose_recipe select atomic
# 这使partman无需确认即可自动分区，前提是您已告知使用上述方法之一进行操作。
#d-i partman-partitioning/confirm_write_new_label boolean true
#d-i partman/choose_partition select finish
#d-i partman/confirm boolean true
#d-i partman/confirm_nooverwrite boolean true
# 这使得partman无需确认即可自动分区。
#d-i partman-md/confirm boolean true
#d-i partman-partitioning/confirm_write_new_label boolean true
#d-i partman/choose_partition select finish
#d-i partman/confirm boolean true
#d-i partman/confirm_nooverwrite boolean true
############################
# 自动分区（原 Azure 分区设置）
############################
# 要分区的磁盘（需要根据磁盘修改）
d-i partman-auto/disk string /dev/sda
# 要使用的方法（regular、lvm、crypto）
d-i partman-auto/method string lvm
# 定义将用于 LVM 卷组的空间量
d-i partman-auto-lvm/guided_size string max
# 禁用自动分区的磁盘包含旧的 LVM 配置警告
d-i partman-lvm/device_remove_lvm boolean true
# 禁用预先存在的软件 RAID 警告
d-i partman-md/device_remove_md boolean true
# 写入 lvm 分区确认
d-i partman-lvm/confirm boolean true
d-i partman-lvm/confirm_nooverwrite boolean true
# 您可以选择三个预定义的分区配方之一：
# - atomic: 所有文件都在一个分区中
# - home:   单独的 /home 分区
# - multi:  单独的 /home，/var 和 /tmp 分区
d-i partman-auto/choose_recipe select atomic
# 无需确认即可自动分区
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true
d-i partman-md/confirm boolean true
# 强制 UEFI 启动（'BIOS compatibility' will be lost）。 默认值：false。
d-i partman-efi/non_efi_system boolean true
# 确保分区表是 GPT - 这是 EFI 所必需的
d-i partman-partitioning/choose_label string gpt
d-i partman-partitioning/default_label string gpt
# 启用磁盘加密后，请跳过预先擦除分区。
#d-i partman-auto-crypto/erase_disks boolean false
# 这使得partman无需确认即可自动分区。
d-i partman-auto/purge_lvm_from_device boolean true

##################################
# APT 配置（根据VPS位置修改镜像网址）
##################################
d-i apt-setup/services-select multiselect security, updates
d-i apt-setup/security_host string deb.debian.org

###############
# Package 选择
###############
tasksel tasksel/first multiselect standard, ssh-server
# 单独安装其他软件包
d-i pkgsel/include string vim net-tools dnsutils lrzsz p7zip-full curl cockpit waagent
#python3-wcwidth python3-openpyxl python3-xmltodict python3-pycryptodome python3-colorama
#nginx libnginx-mod-stream php-imagick php-fpm php-bcmath php-curl php-gd
#php-gmp php-intl php-mbstring php-mysql php-xml php-zip python3-certbot-nginx
#apache2 php libapache2-mod-php php-imagick php-fpm php-bcmath php-curl php-gd php-gmp php-intl php-mbstring php-mysql php-xml php-zip
#nginx libnginx-mod-stream php-imagick php-fpm php-bcmath php-curl php-gd php-gmp php-intl php-mbstring php-mysql php-xml php-zip 
#python3-certbot-nginx python3-certbot-apache mariadb-server 
# 解除引导后是否升级软件包。允许值: none, safe-upgrade, full-upgrade
d-i pkgsel/upgrade select full-upgrade
# 某些版本的安装程序可以报告已安装的软件以及使用的软件。 默认是不报告。
popularity-contest popularity-contest/participate boolean false

#################
# 引导加载程序安装
#################
# 如果未检测到其他操作系统，grub 自动安装到 MBR。
d-i grub-installer/only_debian boolean true
# 如果找到了其他操作系统，将它也安装到 MBR。
d-i grub-installer/with_other_os boolean false
# 安装到默认设备：
d-i grub-installer/bootdev  string default
# grub 的可选密码，以明文形式
#d-i grub-installer/password password 密码
#d-i grub-installer/password-again password 密码
# grub 的可选密码 MD5（使用 grub-md5-crypt 生成）
#d-i grub-installer/password-crypted password [MD5 hash]

##########
# 完成安装
##########
# 在从串行控制台安装期间，通常在 /etc/inittab 中禁用常规虚拟控制台 (VT1-VT6)。 取消注释下一行以防止出现这种情况。
#d-i finish-install/keep-consoles boolean true
# 避免最后一条关于安装已完成的消息。
d-i finish-install/reboot_in_progress note

####################################
# 高级选项（在安装过程中运行自定义命令 ）
####################################
d-i preseed/late_command string mkdir -p /target/root/.ssh;\
echo 'ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIKw8HzbxLASGtNpHs1N30wavoO1ge/on0QcADJ7l+Et0 root@Azure' > /target/root/.ssh/Azure;\
sed -i 's/#Port 22/Port 11011/' /target/etc/ssh/sshd_config;\
sed -i 's/#AddressFamily any/AddressFamily inet/' /target/etc/ssh/sshd_config;\
sed -i 's/#PermitRootLogin/PermitRootLogin/' /target/etc/ssh/sshd_config;\
sed -i '/#AuthorizedKeysFile/a\AuthorizedKeysFile     .ssh/Azure' /target/etc/ssh/sshd_config;\
sed -i '/#ListenAddress ::/d' /target/etc/ssh/sshd_config;\
sed -i 's/#ListenAddress/ListenAddress/' /target/etc/ssh/sshd_config;\
sed -i 's/#UseDNS no/UseDNS no/' /target/etc/ssh/sshd_config;\
sed -i 's/#GSSAPIAuthentication no/GSSAPIAuthentication no/' /target/etc/ssh/sshd_config;\
sed -i 's/#PrintLastLog yes/PrintLastLog no/' /target/etc/ssh/sshd_config;\
sed -i 's/X11Forwarding/#X11Forwarding/' /target/etc/ssh/sshd_config;\
sed -i 's/ListenStream=9090/ListenStream=11111/g' /target/usr/lib/systemd/system/cockpit.socket;\
sed -i 's/AutoUpdate.Enabled=n/AutoUpdate.Enabled=y/' /target/etc/waagent.conf;\
sed -i '/::/d' /target/etc/hosts;\
echo '' > /target/etc/motd;\
sed -i 's/# export/export/' /target/root/.bashrc;\
sed -i 's/# eval/eval/' /target/root/.bashrc;\
sed -i 's/# alias/alias/' /target/root/.bashrc;\
sed -i ':a;N;$!ba;s/$LS_OPTIONS -l/$LS_OPTIONS -lhA/1' /target/root/.bashrc;\
sed -i 's/$LS_OPTIONS -lA/$LS_OPTIONS -lh/' /target/root/.bashrc;\
sed -i 's/rm -i/rm -fr/' /target/root/.bashrc;\
sed -i 's/cp -i/cp -f/' /target/root/.bashrc;\
sed -i 's/mv -i/mv -f/' /target/root/.bashrc;\
sed -i "$ a\alias rz='rz -by'" /target/root/.bashrc;\
sed -i "$ a\alias sz='sz -b'" /target/root/.bashrc;\
sed -i "$ a\alias net='netstat -lnptu'" /target/root/.bashrc;\
sed -i "$ a\alias nets='netstat -antu'" /target/root/.bashrc;\
sed -i "$ a\alias log='cat /var/log/auth.log'" /target/root/.bashrc;\
sed -i "$ a\alias logd='echo '' > /var/log/auth.log'" /target/root/.bashrc;\
sed -i "$ a\alias h='history'" /target/root/.bashrc;\
sed -i "$ a\alias last='last -a'" /target/root/.bashrc;\
sed -i "$ a\alias lastd='echo '' > /var/log/wtmp'" /target/root/.bashrc;\
sed -i "$ a\alias jc='journalctl --boot -ru'" /target/root/.bashrc;\
sed -i 's/allow-hotplug eth0/auto eth0/' /target/etc/network/interfaces;\
sed -i 's/iface eth0 inet dhcp/iface eth0 inet static/' /target/etc/network/interfaces;\
sed -i '$ a\\taddress 10.0.0.4' /target/etc/network/interfaces;\
sed -i '$ a\\tnetmask 255.255.255.0' /target/etc/network/interfaces;\
sed -i '$ a\\tgateway 10.0.0.1' /target/etc/network/interfaces;\
sed -i '/search/d' /target/etc/resolv.conf;\
sed -i '/domain/d' /target/etc/resolv.conf;\
sed -i '$ a\nameserver 8.8.4.4' /target/etc/resolv.conf;\
sed -i '$ a\nameserver 8.8.8.8' /target/etc/resolv.conf;\
sed -i '/168.63.129.16/d' /target/etc/resolv.conf;\
sed -i '$anet.ipv4.tcp_congestion_control=bbr' /target/etc/sysctl.conf;\
sed -i '$anet.core.default_qdisc=fq' /target/etc/sysctl.conf;\
mkdir -p /target/usr/lib/x86_64-linux-gnu/udisks2/modules

