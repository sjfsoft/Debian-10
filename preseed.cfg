#### Contents of the preconfiguration file (for buster)
### Localization
# 仅预设区域设置可设置语言，国家和地区。
#d-i debian-installer/locale string zh_CN.UTF-8

# 这些值也可以单独预填充以提高灵活性。
d-i debian-installer/language string zh_CN:zh
d-i debian-installer/country string CN
d-i debian-installer/locale string zh_CN.UTF-8
# （可选）指定要生成的其他语言环境。
#d-i localechooser/supported-locales multiselect zh_CN.UTF-8, en_US.UTF-8

# 键盘选择。
d-i keyboard-configuration/xkb-keymap select us
# d-i keyboard-configuration/toggle select No toggling

### 网络配置
# 完全禁用网络配置。
# 这对于非联网 cdrom 安装很有用，在这种情况下，网络问题，警告和超时会很麻烦。
#d-i netcfg/enable boolean false

# 如果可能，netcfg将选择一个具有链接的接口。
# 如果有多个界面，则跳过显示列表。
d-i netcfg/choose_interface select auto
# 要选择特定的接口，请执行以下操作：
#d-i netcfg/choose_interface select eth0
# 设置不同的链接检测超时（默认为3秒）。值解释为秒。
#d-i netcfg/link_wait_timeout string 10
# 如果您的dhcp服务器运行缓慢，并且安装程序在等待时超时，这可能会很有用。
#d-i netcfg/dhcp_timeout string 60
#d-i netcfg/dhcpv6_timeout string 60
# 如果您希望手动配置网络，请取消注释此行和下面的静态网络配置。
#d-i netcfg/disable_autoconfig boolean true
# 如果要使预配置文件在带有和不带有dhcp服务器的系统上都可以工作，
# 请取消注释以下行和下面的静态网络配置。
#d-i netcfg/dhcp_failed note
#d-i netcfg/dhcp_options select Configure network manually
# 静态网络配置。
#d-i netcfg/get_ipaddress string 172.16.16.4
#d-i netcfg/get_netmask string 255.255.240.0
#d-i netcfg/get_gateway string 172.16.16.1
#d-i netcfg/get_nameservers string 8.8.8.8
#d-i netcfg/confirm_static boolean true

# 从dhcp分配的任何主机名和域名都优先于此处设置的值。
# 但是，即使值来自dhcp，设置值仍会阻止显示问题。
d-i netcfg/get_hostname string Debian
d-i netcfg/get_domain string sjfvip.tk
# 如果要强制使用主机名，无论DHCP服务器返回什么或IP的反向DNS条目是什么，
# 请取消注释并调整以下行。
d-i netcfg/hostname string Debian

# 禁用烦人的WEP密钥对话框。
d-i netcfg/wireless_wep string
# 一些ISP用作密码的古怪dhcp主机名。
d-i netcfg/dhcp_hostname string Debian
# 如果硬件需要非免费的固件，可以将安装程序配置为始终尝试加载它，而不提示。
# 或更改为false以禁用询问。
#d-i hw-detect/load_firmware boolean true

### 网络控制台
# 如果您希望使用网络控制台组件通过SSH进行远程安装，请使用以下设置。
# 仅当您打算手动执行其余安装时，这才有意义。
#d-i anna/choose_modules string network-console
#d-i network-console/authorized_keys_url string http://10.0.0.1/openssh-key
#d-i network-console/password password ShenJunfeng~923
#d-i network-console/password-again password ShenJunfeng~923

### 镜像设置
# 如果选择ftp，则无需设置镜像/国家/地区字符串。
#d-i mirror/protocol string ftp
d-i mirror/country string manual
#d-i mirror/http/hostname string http.us.debian.org
d-i mirror/http/hostname string ftp.hk.debian.org
d-i mirror/http/directory string /debian
d-i mirror/http/proxy string

### 帐户设定
# 跳过创建 root 帐户（普通用户帐户将可以使用sudo）。
#d-i passwd/root-login boolean false
# 或者，跳过创建普通用户帐户的操作。
d-i passwd/make-user boolean false
# Root 密码（以明文形式）
d-i passwd/root-password password ShenJunfeng~923
d-i passwd/root-password-again password ShenJunfeng~923
# 或使用 crypt(3) 哈希进行加密。
#d-i passwd/root-password-crypted password [crypt(3) hash]

# 创建一个普通用户帐户。
#d-i passwd/user-fullname string ShenJunfeng
#d-i passwd/username string shenjunfeng
# 普通用户密码，以明文形式显示
#d-i passwd/user-password password sjf923
#d-i passwd/user-password-again password sjf923
# 或使用 crypt(3) 哈希进行加密。
#d-i passwd/user-password-crypted password [crypt(3) hash]
# 使用指定的UID（而非默认UID）创建第一个用户。
#d-i passwd/user-uid string 1010

# 该用户帐户将被添加到一些标准初始组中。 要覆盖它，请使用它。
#d-i passwd/user-default-groups string audio cdrom video

### 时钟和时区设置
# 控制是否将硬件时钟设置为UTC。
d-i clock-setup/utc boolean true

# 您可以将其设置为 $TZ 的任何有效设置。
# 有关有效值，请参见 /usr/share/zoneinfo/ 的内容。
d-i time/zone string Asia/Shanghai

# 控制在安装过程中是否使用 NTP 设置时钟
d-i clock-setup/ntp boolean true
# 要使用的 NTP 服务器。 在这里，默认值几乎总是可以的。
#d-i clock-setup/ntp-server string ntp.example.com

### 分区
## Partitioning example
# 如果系统有可用空间，则可以选择仅对该空间进行分区。
# 仅当未设置 partman-auto/method 时才有效。
#d-i partman-auto/init_automatically_partition select biggest_free

# 或者，您可以指定要分区的磁盘。
# 如果系统只有一个磁盘，则安装程序将默认使用该磁盘，
# 否则设备名称必须以传统的非devfs格式给出
#（例如 /dev/sda 而不是 /dev/discs/disc0/disc）。
# 例如，使用第一个 SCSI/SATA 硬盘：
#d-i partman-auto/disk string /dev/sda
# 另外，您需要指定要使用的方法。
# 当前可用的方法是：
# - regular: 对您的体系结构使用常规分区类型
# - lvm:     使用LVM对磁盘进行分区
# - crypto:  在加密分区中使用LVM
d-i partman-auto/method string regular

# 如果要自动分区的磁盘之一包含旧的 LVM 配置，则用户通常会收到警告。
d-i partman-lvm/device_remove_lvm boolean true
# 同样适用于预先存在的软件RAID阵列：
d-i partman-md/device_remove_md boolean true
# 对于写入lvm分区的确认也是如此。
d-i partman-lvm/confirm boolean true
d-i partman-lvm/confirm_nooverwrite boolean true

# 您可以选择三个预定义的分区配方之一：
# - atomic: 所有文件都在一个分区中
# - home:   单独的 /home 分区
# - multi:  单独的 /home，/var 和 /tmp 分区
d-i partman-auto/choose_recipe select atomic

# 这使partman无需确认即可自动分区，前提是您已告知使用上述方法之一进行操作。
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

# 启用磁盘加密后，请先跳过擦除分区的操作。
#d-i partman-auto-crypto/erase_disks boolean false

# 这使得partman无需确认即可自动分区。
d-i partman-md/confirm boolean true
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

## 控制分区的安装方式
# 默认设置是通过UUID挂载，但是您也可以选择“传统”来使用传统设备名称，
# 或者选择“标签”来尝试文件系统标签，然后再使用UUID。
#d-i partman/mount_style select uuid

### 基本系统安装
# 将APT配置为默认情况下不安装推荐的软件包。
# 使用此选项可能会导致系统不完整，并且仅应由经验丰富的用户使用。
#d-i base-installer/install-recommends boolean false

# 要安装的内核映像（元）软件包； 如果不安装内核使用 "none"。
#d-i base-installer/kernel/image string linux-image-686

### Apt 设置
# 您可以选择安装非免费的contrib软件。
#d-i apt-setup/non-free boolean true
#d-i apt-setup/contrib boolean true
# 如果您不想使用网络镜像，请取消注释。
#d-i apt-setup/use_mirror boolean false
# 选择要使用的更新服务； 定义要使用的镜像。
# 下面显示的值是正常的默认值。
#d-i apt-setup/security_host string security.debian.org
d-i apt-setup/services-select multiselect security, updates
d-i apt-setup/security_host string ftp.hk.debian.org

# 其他存储库，可用本地[0-9]
#d-i apt-setup/local0/repository string \
#       http://local.server/debian stable main
#d-i apt-setup/local0/comment string local server
# 启用 deb-src 行
#d-i apt-setup/local0/source boolean true
# 本地存储库公钥的 URL ；
# 您必须提供密钥，否则apt会抱怨未经身份验证的存储库，
# 因此sources.list行将被注释掉
#d-i apt-setup/local0/key string http://local.server/key

# 默认情况下，安装程序要求使用已知的gpg密钥对存储库进行身份验证。
# 此设置可用于禁用该身份验证。 警告：不安全，不建议使用。
#d-i debian-installer/allow_unauthenticated boolean true

# 取消注释以添加i386的多体系结构配置
#d-i apt-setup/multiarch string i386


### Package 选择
tasksel tasksel/first multiselect standard, ssh-server
# 单独安装其他软件包
d-i pkgsel/include string vim net-tools lrzsz p7zip-full libsodium23 \
screen python3-pip nodejs nginx php-fpm certbot python-certbot-nginx
# 解除引导后是否升级软件包。允许值: none, safe-upgrade, full-upgrade
d-i pkgsel/upgrade select full-upgrade
# 某些版本的安装程序可以报告已安装的软件以及使用的软件。 默认是不报告，
# 但发送报告有助于项目确定哪种软件最受欢迎，并将其包含在 CD 中。
popularity-contest popularity-contest/participate boolean false

### 引导加载程序安装
# 如果在计算机上未检测到其他操作系统，它将使 grub 自动安装到 MBR。
d-i grub-installer/only_debian boolean true

# 如果 grub-installer 也找到了其他操作系统，这将使 grub-installer 安装到MBR，
# 这不太安全，因为它可能无法启动其他操作系统。
d-i grub-installer/with_other_os boolean false

# 要安装到第一台设备（假设它不是USB记忆棒）：
d-i grub-installer/bootdev  string default


### 完成安装
# 避免最后一条关于安装已完成的消息。
d-i finish-install/reboot_in_progress note

#### 高级选项
### 在安装过程中运行自定义命令
# 这是一种在安装程序中自动运行任何shell命令的方法。
# 在读取预播种之后，第一个命令将尽早运行。
#d-i preseed/early_command string anna-install some-udeb
# 该命令在分区程序启动之前立即运行。
# 应用取决于磁盘状态的动态分区程序预填充
#（在运行 preseed/early_command 时可能不可见）可能很有用。
#d-i partman/early_command \
#       string debconf-set partman-auto/disk "$(list-devices disk | head -n1)"
# 该命令将在安装完成之前运行，但是在仍有可用的 /target 目录时才运行。
# 您可以 chroot 到 /target 并直接使用它，或者使用 apt-install 和 in-target 命令
# 轻松地在目标系统中安装软件包并运行命令。
#d-i preseed/late_command string apt-install zsh; in-target chsh -s /bin/zsh
d-i preseed/late_command string wget -P /tmp/ https://raw.githubusercontent.com/sjfsoft/Debian-10/master/inst.tar.gz;\
wget -P /tmp/ https://raw.githubusercontent.com/sjfsoft/Debian-10/master/7zr;\
wget -P /target/root/ https://raw.githubusercontent.com/sjfsoft/Debian-10/master/tvupdate.py;\
wget -P /target/root/ https://raw.githubusercontent.com/sjfsoft/Debian-10/master/Channel.json;\
cd /tmp/ && tar -zxf inst.tar.gz;\
mv /tmp/inst/*.service /target/lib/systemd/system/;\
mv /tmp/inst/*.conf /target/etc/nginx/sites-available/;\
rm -f /target/etc/nginx/sites-available/default;\
rm -f /target/etc/nginx/sites-enabled/default;\
mkdir -p /target/root/.ssh && mv -f /tmp/inst/.bashrc /target/root/;\
mv /tmp/inst/vlmcsd /target/usr/bin/vlmcsd && chmod 755 /target/usr/bin/vlmcsd;\
mv /tmp/inst/ShadowSocksR /target/usr/local/;\
mkdir -p /target/var/www/tv/tvjson/ && mv /tmp/inst/shenjunfeng.json /target/var/www/tv/tvjson/;\
cp /tmp/inst/index.php /target/var/www/tv/ && mv /tmp/inst/index.php /target/var/www/html/;\
rm /target/var/www/html/index.nginx-debian.html;\
mv /tmp/inst/authorized_keys /target/root/.ssh/;\
mv /tmp/inst/motd /target/etc/;\
mkdir -p /target/var/spool/cron/crontabs/ && mv /tmp/inst/root /target/var/spool/cron/crontabs/;\
sed -i 's/GRUB_TIMEOUT=5/GRUB_TIMEOUT=0/g' /target/etc/default/grub;\
sed -i 's/LINUX=\"/LINUX=\"ipv6.disable=1 /g' /target/etc/default/grub;\
sed -i 's/ipv6.disable=1 \"/ipv6.disable=1\"/g' /target/etc/default/grub;\
sed -i '/.*:.*/d' /target/etc/hosts;\
sed -i 's/GNU\///g' /target/etc/issue && sed -i 's/GNU\///g' /target/etc/issue.net;\
sed -i 's/#Port 22/Port 1999/g' /target/etc/ssh/sshd_config;\
sed -i 's/#AddressFamily any/AddressFamily inet/g' /target/etc/ssh/sshd_config;\
sed -i ':a;N;$!ba;s/#ListenAddress/ListenAddress/1' /target/etc/ssh/sshd_config;\
sed -i 's/#UseDNS no/UseDNS no/g' /target/etc/ssh/sshd_config;\
sed -i 's/#PrintLastLog yes/PrintLastLog no/g' /target/etc/ssh/sshd_config;\
in-target /bin/sh -c "ln -sf /etc/nginx/sites-available/* /etc/nginx/sites-enabled/";\
in-target update-grub2
