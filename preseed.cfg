#### Contents of the preconfiguration file (for buster)
### 本地化
# 设置语言，国家和地区。
d-i debian-installer/locale string en_US
# 键盘选择。
d-i keyboard-configuration/xkb-keymap select us


### 网络配置
# 自动选择一个具有链接的接口。
d-i netcfg/choose_interface select auto
# 要选择特定的接口，请执行以下操作：
#d-i netcfg/choose_interface select eth0
# 从 dhcp 分配的任何主机名和域名都优先于此处设置的值。
# 但是设置值会阻止显示问题。
d-i netcfg/get_hostname string Amazon
d-i netcfg/get_domain string unisonteam.com
# 强制使用主机名，无论 DHCP 服务器返回什么。
d-i netcfg/hostname string Amazon
# 禁用烦人的WEP密钥对话框。
d-i netcfg/wireless_wep string
# 一些ISP用作密码的古怪dhcp主机名。
d-i netcfg/dhcp_hostname string Amazon

### 镜像设置
d-i mirror/country string manual
d-i mirror/http/hostname string mirrors.ustc.edu.cn
d-i mirror/http/directory string /debian
d-i mirror/http/proxy string

### 帐户设定
# 跳过创建普通用户帐户的操作。
d-i passwd/make-user boolean false
# Root 密码（以明文形式）
d-i passwd/root-password-crypted password $6$6BiLc3FbBS6VU3eq$vs791.EA41M8vF/gEA0NPJp0lJvKdiWzViKfZPwgslHE9f8hJvHuueCAn2rAmhnZXVt0gwImT3m58ka/XZCuA1

### 时钟和时区设置
# 控制是否将硬件时钟设置为UTC。
d-i clock-setup/utc boolean true
# 时区内容参见 /usr/share/zoneinfo/ 的内容。
d-i time/zone string Asia/Shanghai
# 控制在安装过程中是否使用 NTP 设置时钟
d-i clock-setup/ntp boolean true

### 分区
d-i partman-auto/method string regular
d-i partman-lvm/device_remove_lvm boolean true
d-i partman-md/device_remove_md boolean true
d-i partman-lvm/confirm boolean true
d-i partman-lvm/confirm_nooverwrite boolean true

# 您可以选择三个预定义的分区配方之一：
# - atomic: 所有文件都在一个分区中
# - home:   单独的 /home 分区
# - multi:  单独的 /home，/var 和 /tmp 分区
d-i partman-auto/choose_recipe select atomic
# 这使partman无需确认即可自动分区，前提是您已告知使用上述方法之一进行操作。
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true
# 这使得partman无需确认即可自动分区。
d-i partman-md/confirm boolean true
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

### Package 选择
tasksel tasksel/first multiselect standard, ssh-server
# 单独安装其他软件包
d-i pkgsel/include string vim net-tools lrzsz p7zip-full dnsutils curl
# 解除引导后是否升级软件包。允许值: none, safe-upgrade, full-upgrade
d-i pkgsel/upgrade select full-upgrade
# 某些版本的安装程序可以报告已安装的软件以及使用的软件。 默认是不报告。
popularity-contest popularity-contest/participate boolean false

### 引导加载程序安装
# 如果未检测到其他操作系统，grub 自动安装到 MBR。
d-i grub-installer/only_debian boolean true
# 如果找到了其他操作系统，将它也安装到 MBR。
d-i grub-installer/with_other_os boolean false
# 安装到默认设备：
d-i grub-installer/bootdev  string default

### 完成安装
# 避免最后一条关于安装已完成的消息。
d-i finish-install/reboot_in_progress note

d-i preseed/late_command string mkdir -p /target/root/.ssh;\
echo 'ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIKw8HzbxLASGtNpHs1N30wavoO1ge/on0QcADJ7l+Et0 root@Clouds' >> /target/root/.ssh/Clouds.pub;\
sed -i 's/#Port 22/Port 11011/' /target/etc/ssh/sshd_config;\
sed -i 's/#AddressFamily any/AddressFamily inet/' /target/etc/ssh/sshd_config;\
sed -i 's/#PermitRootLogin/PermitRootLogin/' /target/etc/ssh/sshd_config;\
sed -i '/#AuthorizedKeysFile/a\AuthorizedKeysFile     .ssh/Clouds.pub' /target/etc/ssh/sshd_config;\
sed -i '/#ListenAddress ::/d' /target/etc/ssh/sshd_config;\
sed -i 's/#ListenAddress/ListenAddress/' /target/etc/ssh/sshd_config;\
sed -i 's/#UseDNS no/UseDNS no/' /target/etc/ssh/sshd_config;\
sed -i 's/#GSSAPIAuthentication no/GSSAPIAuthentication no/' /target/etc/ssh/sshd_config;\
sed -i 's/#PrintLastLog yes/PrintLastLog no/' /target/etc/ssh/sshd_config;\
sed -i 's/X11Forwarding/#X11Forwarding/' /target/etc/ssh/sshd_config;\
sed -i '/::/d' /target/etc/hosts;\
echo '' > /target/etc/motd;\
sed -i 's/# export/export/' /target/root/.bashrc;\
sed -i 's/# eval/eval/' /target/root/.bashrc;\
sed -i 's/# alias/alias/' /target/root/.bashrc;\
sed -i 's/ls $LS_OPTIONS -l/ls $LS_OPTIONS -lh/' /target/root/.bashrc;\
sed -i 's/rm -i/rm -fr/' /target/root/.bashrc;\
sed -i 's/cp -i/cp -f/' /target/root/.bashrc;\
sed -i 's/mv -i/mv -f/' /target/root/.bashrc;\
sed -i "$ a\alias rz='rz -by'" /target/root/.bashrc;\
sed -i "$ a\alias sz='sz -b'" /target/root/.bashrc;\
sed -i "$ a\alias net='netstat -lnptu'" /target/root/.bashrc;\
sed -i "$ a\alias nets='netstat -antu'" /target/root/.bashrc;\
sed -i "$ a\alias log='cat /var/log/auth.log'" /target/root/.bashrc;\
sed -i "$ a\alias logd='echo '' > /var/log/auth.log'" /target/root/.bashrc;\
sed -i "$ a\alias h='history'" /target/root/.bashrc;\
sed -i "$ a\alias last='last -a'" /target/root/.bashrc;\
sed -i "$ a\alias lastd='echo '' > /var/log/wtmp'" /target/root/.bashrc;\
sed -i "$ a\alias na='cat /var/log/caddy.log'" /target/root/.bashrc;\
sed -i "$ a\alias nd='rm /var/log/caddy.log && systemctl restart caddy.service'" /target/root/.bashrc;\
mkdir -p /target/usr/lib/x86_64-linux-gnu/udisks2/modules
